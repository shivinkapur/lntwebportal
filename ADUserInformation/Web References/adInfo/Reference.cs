//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace ADUserInformation.adInfo {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DirectoryServiceSoap", Namespace="http://lthed.com")]
    public partial class DirectoryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullNamefromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFirstNamefromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastNamefromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDisplayNamefromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailIDfromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManagerNamefromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManagerEmailfromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManagerIDfromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPSNofromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPSNoFromEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManagerNameFromEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullNameFromEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPSNoFromnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailFromNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrincipalNameFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentNameFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentFromNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentFromEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMobileNoFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDesignationFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordExpiryDateFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBaanSBUFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendExpiryMailFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExprDaysOfDomainIDFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendExpiryMailOnAnyDayFromUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DirectoryService() {
            this.Url = "http://hedweb/services/DirectoryService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event GetFullNamefromUserIDCompletedEventHandler GetFullNamefromUserIDCompleted;
        
        /// <remarks/>
        public event GetFirstNamefromUserIDCompletedEventHandler GetFirstNamefromUserIDCompleted;
        
        /// <remarks/>
        public event GetLastNamefromUserIDCompletedEventHandler GetLastNamefromUserIDCompleted;
        
        /// <remarks/>
        public event GetDisplayNamefromUserIDCompletedEventHandler GetDisplayNamefromUserIDCompleted;
        
        /// <remarks/>
        public event GetEmailIDfromUserIDCompletedEventHandler GetEmailIDfromUserIDCompleted;
        
        /// <remarks/>
        public event GetManagerNamefromUserIDCompletedEventHandler GetManagerNamefromUserIDCompleted;
        
        /// <remarks/>
        public event GetManagerEmailfromUserIDCompletedEventHandler GetManagerEmailfromUserIDCompleted;
        
        /// <remarks/>
        public event GetManagerIDfromUserIDCompletedEventHandler GetManagerIDfromUserIDCompleted;
        
        /// <remarks/>
        public event GetPSNofromUserIDCompletedEventHandler GetPSNofromUserIDCompleted;
        
        /// <remarks/>
        public event GetPSNoFromEmailCompletedEventHandler GetPSNoFromEmailCompleted;
        
        /// <remarks/>
        public event GetManagerNameFromEmailCompletedEventHandler GetManagerNameFromEmailCompleted;
        
        /// <remarks/>
        public event GetFullNameFromEmailCompletedEventHandler GetFullNameFromEmailCompleted;
        
        /// <remarks/>
        public event GetPSNoFromnameCompletedEventHandler GetPSNoFromnameCompleted;
        
        /// <remarks/>
        public event GetEmailFromNameCompletedEventHandler GetEmailFromNameCompleted;
        
        /// <remarks/>
        public event GetPrincipalNameFromUserIDCompletedEventHandler GetPrincipalNameFromUserIDCompleted;
        
        /// <remarks/>
        public event GetDepartmentFromUserIDCompletedEventHandler GetDepartmentFromUserIDCompleted;
        
        /// <remarks/>
        public event GetDepartmentNameFromUserIDCompletedEventHandler GetDepartmentNameFromUserIDCompleted;
        
        /// <remarks/>
        public event GetDepartmentFromNameCompletedEventHandler GetDepartmentFromNameCompleted;
        
        /// <remarks/>
        public event GetDepartmentFromEmailCompletedEventHandler GetDepartmentFromEmailCompleted;
        
        /// <remarks/>
        public event GetMobileNoFromUserIDCompletedEventHandler GetMobileNoFromUserIDCompleted;
        
        /// <remarks/>
        public event GetDesignationFromUserIDCompletedEventHandler GetDesignationFromUserIDCompleted;
        
        /// <remarks/>
        public event GetPasswordExpiryDateFromUserIDCompletedEventHandler GetPasswordExpiryDateFromUserIDCompleted;
        
        /// <remarks/>
        public event GetBaanSBUFromUserIDCompletedEventHandler GetBaanSBUFromUserIDCompleted;
        
        /// <remarks/>
        public event SendExpiryMailFromUserIDCompletedEventHandler SendExpiryMailFromUserIDCompleted;
        
        /// <remarks/>
        public event GetExprDaysOfDomainIDFromUserIDCompletedEventHandler GetExprDaysOfDomainIDFromUserIDCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event SendExpiryMailOnAnyDayFromUserIDCompletedEventHandler SendExpiryMailOnAnyDayFromUserIDCompleted;
        
        /// <remarks/>
        public event getAuthenticationCompletedEventHandler getAuthenticationCompleted;
        
        /// <remarks/>
        public event changePasswordCompletedEventHandler changePasswordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetUserInfo", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserInfo(string inSAM, string inType, string attr) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        inSAM,
                        inType,
                        attr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string inSAM, string inType, string attr) {
            this.GetUserInfoAsync(inSAM, inType, attr, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string inSAM, string inType, string attr, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        inSAM,
                        inType,
                        attr}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetFullNamefromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFullNamefromUserID(string UserAccount) {
            object[] results = this.Invoke("GetFullNamefromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFullNamefromUserIDAsync(string UserAccount) {
            this.GetFullNamefromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetFullNamefromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetFullNamefromUserIDOperationCompleted == null)) {
                this.GetFullNamefromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullNamefromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetFullNamefromUserID", new object[] {
                        UserAccount}, this.GetFullNamefromUserIDOperationCompleted, userState);
        }
        
        private void OnGetFullNamefromUserIDOperationCompleted(object arg) {
            if ((this.GetFullNamefromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullNamefromUserIDCompleted(this, new GetFullNamefromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetFirstNamefromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFirstNamefromUserID(string UserAccount) {
            object[] results = this.Invoke("GetFirstNamefromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFirstNamefromUserIDAsync(string UserAccount) {
            this.GetFirstNamefromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetFirstNamefromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetFirstNamefromUserIDOperationCompleted == null)) {
                this.GetFirstNamefromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFirstNamefromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetFirstNamefromUserID", new object[] {
                        UserAccount}, this.GetFirstNamefromUserIDOperationCompleted, userState);
        }
        
        private void OnGetFirstNamefromUserIDOperationCompleted(object arg) {
            if ((this.GetFirstNamefromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFirstNamefromUserIDCompleted(this, new GetFirstNamefromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetLastNamefromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLastNamefromUserID(string UserAccount) {
            object[] results = this.Invoke("GetLastNamefromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastNamefromUserIDAsync(string UserAccount) {
            this.GetLastNamefromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetLastNamefromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetLastNamefromUserIDOperationCompleted == null)) {
                this.GetLastNamefromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastNamefromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetLastNamefromUserID", new object[] {
                        UserAccount}, this.GetLastNamefromUserIDOperationCompleted, userState);
        }
        
        private void OnGetLastNamefromUserIDOperationCompleted(object arg) {
            if ((this.GetLastNamefromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastNamefromUserIDCompleted(this, new GetLastNamefromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetDisplayNamefromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDisplayNamefromUserID(string UserAccount) {
            object[] results = this.Invoke("GetDisplayNamefromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDisplayNamefromUserIDAsync(string UserAccount) {
            this.GetDisplayNamefromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetDisplayNamefromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetDisplayNamefromUserIDOperationCompleted == null)) {
                this.GetDisplayNamefromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDisplayNamefromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetDisplayNamefromUserID", new object[] {
                        UserAccount}, this.GetDisplayNamefromUserIDOperationCompleted, userState);
        }
        
        private void OnGetDisplayNamefromUserIDOperationCompleted(object arg) {
            if ((this.GetDisplayNamefromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDisplayNamefromUserIDCompleted(this, new GetDisplayNamefromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetEmailIDfromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmailIDfromUserID(string UserAccount) {
            object[] results = this.Invoke("GetEmailIDfromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailIDfromUserIDAsync(string UserAccount) {
            this.GetEmailIDfromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetEmailIDfromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetEmailIDfromUserIDOperationCompleted == null)) {
                this.GetEmailIDfromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailIDfromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetEmailIDfromUserID", new object[] {
                        UserAccount}, this.GetEmailIDfromUserIDOperationCompleted, userState);
        }
        
        private void OnGetEmailIDfromUserIDOperationCompleted(object arg) {
            if ((this.GetEmailIDfromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailIDfromUserIDCompleted(this, new GetEmailIDfromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetManagerNamefromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetManagerNamefromUserID(string UserAccount) {
            object[] results = this.Invoke("GetManagerNamefromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetManagerNamefromUserIDAsync(string UserAccount) {
            this.GetManagerNamefromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetManagerNamefromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetManagerNamefromUserIDOperationCompleted == null)) {
                this.GetManagerNamefromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManagerNamefromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetManagerNamefromUserID", new object[] {
                        UserAccount}, this.GetManagerNamefromUserIDOperationCompleted, userState);
        }
        
        private void OnGetManagerNamefromUserIDOperationCompleted(object arg) {
            if ((this.GetManagerNamefromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManagerNamefromUserIDCompleted(this, new GetManagerNamefromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetManagerEmailfromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetManagerEmailfromUserID(string UserAccount) {
            object[] results = this.Invoke("GetManagerEmailfromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetManagerEmailfromUserIDAsync(string UserAccount) {
            this.GetManagerEmailfromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetManagerEmailfromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetManagerEmailfromUserIDOperationCompleted == null)) {
                this.GetManagerEmailfromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManagerEmailfromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetManagerEmailfromUserID", new object[] {
                        UserAccount}, this.GetManagerEmailfromUserIDOperationCompleted, userState);
        }
        
        private void OnGetManagerEmailfromUserIDOperationCompleted(object arg) {
            if ((this.GetManagerEmailfromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManagerEmailfromUserIDCompleted(this, new GetManagerEmailfromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetManagerIDfromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetManagerIDfromUserID(string UserAccount) {
            object[] results = this.Invoke("GetManagerIDfromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetManagerIDfromUserIDAsync(string UserAccount) {
            this.GetManagerIDfromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetManagerIDfromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetManagerIDfromUserIDOperationCompleted == null)) {
                this.GetManagerIDfromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManagerIDfromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetManagerIDfromUserID", new object[] {
                        UserAccount}, this.GetManagerIDfromUserIDOperationCompleted, userState);
        }
        
        private void OnGetManagerIDfromUserIDOperationCompleted(object arg) {
            if ((this.GetManagerIDfromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManagerIDfromUserIDCompleted(this, new GetManagerIDfromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetPSNofromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPSNofromUserID(string UserAccount) {
            object[] results = this.Invoke("GetPSNofromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPSNofromUserIDAsync(string UserAccount) {
            this.GetPSNofromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetPSNofromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetPSNofromUserIDOperationCompleted == null)) {
                this.GetPSNofromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPSNofromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetPSNofromUserID", new object[] {
                        UserAccount}, this.GetPSNofromUserIDOperationCompleted, userState);
        }
        
        private void OnGetPSNofromUserIDOperationCompleted(object arg) {
            if ((this.GetPSNofromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPSNofromUserIDCompleted(this, new GetPSNofromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetPSNoFromEmail", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPSNoFromEmail(string UserAccount) {
            object[] results = this.Invoke("GetPSNoFromEmail", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPSNoFromEmailAsync(string UserAccount) {
            this.GetPSNoFromEmailAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetPSNoFromEmailAsync(string UserAccount, object userState) {
            if ((this.GetPSNoFromEmailOperationCompleted == null)) {
                this.GetPSNoFromEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPSNoFromEmailOperationCompleted);
            }
            this.InvokeAsync("GetPSNoFromEmail", new object[] {
                        UserAccount}, this.GetPSNoFromEmailOperationCompleted, userState);
        }
        
        private void OnGetPSNoFromEmailOperationCompleted(object arg) {
            if ((this.GetPSNoFromEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPSNoFromEmailCompleted(this, new GetPSNoFromEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetManagerNameFromEmail", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetManagerNameFromEmail(string UserAccount) {
            object[] results = this.Invoke("GetManagerNameFromEmail", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetManagerNameFromEmailAsync(string UserAccount) {
            this.GetManagerNameFromEmailAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetManagerNameFromEmailAsync(string UserAccount, object userState) {
            if ((this.GetManagerNameFromEmailOperationCompleted == null)) {
                this.GetManagerNameFromEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManagerNameFromEmailOperationCompleted);
            }
            this.InvokeAsync("GetManagerNameFromEmail", new object[] {
                        UserAccount}, this.GetManagerNameFromEmailOperationCompleted, userState);
        }
        
        private void OnGetManagerNameFromEmailOperationCompleted(object arg) {
            if ((this.GetManagerNameFromEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManagerNameFromEmailCompleted(this, new GetManagerNameFromEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetFullNameFromEmail", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFullNameFromEmail(string UserAccount) {
            object[] results = this.Invoke("GetFullNameFromEmail", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFullNameFromEmailAsync(string UserAccount) {
            this.GetFullNameFromEmailAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetFullNameFromEmailAsync(string UserAccount, object userState) {
            if ((this.GetFullNameFromEmailOperationCompleted == null)) {
                this.GetFullNameFromEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullNameFromEmailOperationCompleted);
            }
            this.InvokeAsync("GetFullNameFromEmail", new object[] {
                        UserAccount}, this.GetFullNameFromEmailOperationCompleted, userState);
        }
        
        private void OnGetFullNameFromEmailOperationCompleted(object arg) {
            if ((this.GetFullNameFromEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullNameFromEmailCompleted(this, new GetFullNameFromEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetPSNoFromname", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPSNoFromname(string UserAccount) {
            object[] results = this.Invoke("GetPSNoFromname", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPSNoFromnameAsync(string UserAccount) {
            this.GetPSNoFromnameAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetPSNoFromnameAsync(string UserAccount, object userState) {
            if ((this.GetPSNoFromnameOperationCompleted == null)) {
                this.GetPSNoFromnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPSNoFromnameOperationCompleted);
            }
            this.InvokeAsync("GetPSNoFromname", new object[] {
                        UserAccount}, this.GetPSNoFromnameOperationCompleted, userState);
        }
        
        private void OnGetPSNoFromnameOperationCompleted(object arg) {
            if ((this.GetPSNoFromnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPSNoFromnameCompleted(this, new GetPSNoFromnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetEmailFromName", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmailFromName(string UserAccount) {
            object[] results = this.Invoke("GetEmailFromName", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailFromNameAsync(string UserAccount) {
            this.GetEmailFromNameAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetEmailFromNameAsync(string UserAccount, object userState) {
            if ((this.GetEmailFromNameOperationCompleted == null)) {
                this.GetEmailFromNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailFromNameOperationCompleted);
            }
            this.InvokeAsync("GetEmailFromName", new object[] {
                        UserAccount}, this.GetEmailFromNameOperationCompleted, userState);
        }
        
        private void OnGetEmailFromNameOperationCompleted(object arg) {
            if ((this.GetEmailFromNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailFromNameCompleted(this, new GetEmailFromNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetPrincipalNameFromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrincipalNameFromUserID(string UserAccount) {
            object[] results = this.Invoke("GetPrincipalNameFromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrincipalNameFromUserIDAsync(string UserAccount) {
            this.GetPrincipalNameFromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetPrincipalNameFromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetPrincipalNameFromUserIDOperationCompleted == null)) {
                this.GetPrincipalNameFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrincipalNameFromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetPrincipalNameFromUserID", new object[] {
                        UserAccount}, this.GetPrincipalNameFromUserIDOperationCompleted, userState);
        }
        
        private void OnGetPrincipalNameFromUserIDOperationCompleted(object arg) {
            if ((this.GetPrincipalNameFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrincipalNameFromUserIDCompleted(this, new GetPrincipalNameFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetDepartmentFromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentFromUserID(string UserAccount) {
            object[] results = this.Invoke("GetDepartmentFromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentFromUserIDAsync(string UserAccount) {
            this.GetDepartmentFromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetDepartmentFromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetDepartmentFromUserIDOperationCompleted == null)) {
                this.GetDepartmentFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentFromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentFromUserID", new object[] {
                        UserAccount}, this.GetDepartmentFromUserIDOperationCompleted, userState);
        }
        
        private void OnGetDepartmentFromUserIDOperationCompleted(object arg) {
            if ((this.GetDepartmentFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentFromUserIDCompleted(this, new GetDepartmentFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetDepartmentNameFromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentNameFromUserID(string UserAccount) {
            object[] results = this.Invoke("GetDepartmentNameFromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentNameFromUserIDAsync(string UserAccount) {
            this.GetDepartmentNameFromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetDepartmentNameFromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetDepartmentNameFromUserIDOperationCompleted == null)) {
                this.GetDepartmentNameFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentNameFromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentNameFromUserID", new object[] {
                        UserAccount}, this.GetDepartmentNameFromUserIDOperationCompleted, userState);
        }
        
        private void OnGetDepartmentNameFromUserIDOperationCompleted(object arg) {
            if ((this.GetDepartmentNameFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentNameFromUserIDCompleted(this, new GetDepartmentNameFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetDepartmentFromName", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentFromName(string UserAccount) {
            object[] results = this.Invoke("GetDepartmentFromName", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentFromNameAsync(string UserAccount) {
            this.GetDepartmentFromNameAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetDepartmentFromNameAsync(string UserAccount, object userState) {
            if ((this.GetDepartmentFromNameOperationCompleted == null)) {
                this.GetDepartmentFromNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentFromNameOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentFromName", new object[] {
                        UserAccount}, this.GetDepartmentFromNameOperationCompleted, userState);
        }
        
        private void OnGetDepartmentFromNameOperationCompleted(object arg) {
            if ((this.GetDepartmentFromNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentFromNameCompleted(this, new GetDepartmentFromNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetDepartmentFromEmail", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentFromEmail(string UserAccount) {
            object[] results = this.Invoke("GetDepartmentFromEmail", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentFromEmailAsync(string UserAccount) {
            this.GetDepartmentFromEmailAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetDepartmentFromEmailAsync(string UserAccount, object userState) {
            if ((this.GetDepartmentFromEmailOperationCompleted == null)) {
                this.GetDepartmentFromEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentFromEmailOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentFromEmail", new object[] {
                        UserAccount}, this.GetDepartmentFromEmailOperationCompleted, userState);
        }
        
        private void OnGetDepartmentFromEmailOperationCompleted(object arg) {
            if ((this.GetDepartmentFromEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentFromEmailCompleted(this, new GetDepartmentFromEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetMobileNoFromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMobileNoFromUserID(string UserAccount) {
            object[] results = this.Invoke("GetMobileNoFromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMobileNoFromUserIDAsync(string UserAccount) {
            this.GetMobileNoFromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetMobileNoFromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetMobileNoFromUserIDOperationCompleted == null)) {
                this.GetMobileNoFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMobileNoFromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetMobileNoFromUserID", new object[] {
                        UserAccount}, this.GetMobileNoFromUserIDOperationCompleted, userState);
        }
        
        private void OnGetMobileNoFromUserIDOperationCompleted(object arg) {
            if ((this.GetMobileNoFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMobileNoFromUserIDCompleted(this, new GetMobileNoFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetDesignationFromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDesignationFromUserID(string UserAccount) {
            object[] results = this.Invoke("GetDesignationFromUserID", new object[] {
                        UserAccount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDesignationFromUserIDAsync(string UserAccount) {
            this.GetDesignationFromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetDesignationFromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetDesignationFromUserIDOperationCompleted == null)) {
                this.GetDesignationFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDesignationFromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetDesignationFromUserID", new object[] {
                        UserAccount}, this.GetDesignationFromUserIDOperationCompleted, userState);
        }
        
        private void OnGetDesignationFromUserIDOperationCompleted(object arg) {
            if ((this.GetDesignationFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDesignationFromUserIDCompleted(this, new GetDesignationFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetPasswordExpiryDateFromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetPasswordExpiryDateFromUserID(string UserAccount) {
            object[] results = this.Invoke("GetPasswordExpiryDateFromUserID", new object[] {
                        UserAccount});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordExpiryDateFromUserIDAsync(string UserAccount) {
            this.GetPasswordExpiryDateFromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetPasswordExpiryDateFromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetPasswordExpiryDateFromUserIDOperationCompleted == null)) {
                this.GetPasswordExpiryDateFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordExpiryDateFromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetPasswordExpiryDateFromUserID", new object[] {
                        UserAccount}, this.GetPasswordExpiryDateFromUserIDOperationCompleted, userState);
        }
        
        private void OnGetPasswordExpiryDateFromUserIDOperationCompleted(object arg) {
            if ((this.GetPasswordExpiryDateFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordExpiryDateFromUserIDCompleted(this, new GetPasswordExpiryDateFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetBaanSBUFromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBaanSBUFromUserID(string UserAccount, int Comp) {
            object[] results = this.Invoke("GetBaanSBUFromUserID", new object[] {
                        UserAccount,
                        Comp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBaanSBUFromUserIDAsync(string UserAccount, int Comp) {
            this.GetBaanSBUFromUserIDAsync(UserAccount, Comp, null);
        }
        
        /// <remarks/>
        public void GetBaanSBUFromUserIDAsync(string UserAccount, int Comp, object userState) {
            if ((this.GetBaanSBUFromUserIDOperationCompleted == null)) {
                this.GetBaanSBUFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBaanSBUFromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetBaanSBUFromUserID", new object[] {
                        UserAccount,
                        Comp}, this.GetBaanSBUFromUserIDOperationCompleted, userState);
        }
        
        private void OnGetBaanSBUFromUserIDOperationCompleted(object arg) {
            if ((this.GetBaanSBUFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBaanSBUFromUserIDCompleted(this, new GetBaanSBUFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/SendExpiryMailFromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendExpiryMailFromUserID(string UserAccount) {
            object[] results = this.Invoke("SendExpiryMailFromUserID", new object[] {
                        UserAccount});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendExpiryMailFromUserIDAsync(string UserAccount) {
            this.SendExpiryMailFromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void SendExpiryMailFromUserIDAsync(string UserAccount, object userState) {
            if ((this.SendExpiryMailFromUserIDOperationCompleted == null)) {
                this.SendExpiryMailFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendExpiryMailFromUserIDOperationCompleted);
            }
            this.InvokeAsync("SendExpiryMailFromUserID", new object[] {
                        UserAccount}, this.SendExpiryMailFromUserIDOperationCompleted, userState);
        }
        
        private void OnSendExpiryMailFromUserIDOperationCompleted(object arg) {
            if ((this.SendExpiryMailFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendExpiryMailFromUserIDCompleted(this, new SendExpiryMailFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/GetExprDaysOfDomainIDFromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetExprDaysOfDomainIDFromUserID(string UserAccount) {
            object[] results = this.Invoke("GetExprDaysOfDomainIDFromUserID", new object[] {
                        UserAccount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetExprDaysOfDomainIDFromUserIDAsync(string UserAccount) {
            this.GetExprDaysOfDomainIDFromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void GetExprDaysOfDomainIDFromUserIDAsync(string UserAccount, object userState) {
            if ((this.GetExprDaysOfDomainIDFromUserIDOperationCompleted == null)) {
                this.GetExprDaysOfDomainIDFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExprDaysOfDomainIDFromUserIDOperationCompleted);
            }
            this.InvokeAsync("GetExprDaysOfDomainIDFromUserID", new object[] {
                        UserAccount}, this.GetExprDaysOfDomainIDFromUserIDOperationCompleted, userState);
        }
        
        private void OnGetExprDaysOfDomainIDFromUserIDOperationCompleted(object arg) {
            if ((this.GetExprDaysOfDomainIDFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExprDaysOfDomainIDFromUserIDCompleted(this, new GetExprDaysOfDomainIDFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/SendEmail", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmail(string _frm, string _to, string _ccto, string _sub, string _bdy) {
            object[] results = this.Invoke("SendEmail", new object[] {
                        _frm,
                        _to,
                        _ccto,
                        _sub,
                        _bdy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAsync(string _frm, string _to, string _ccto, string _sub, string _bdy) {
            this.SendEmailAsync(_frm, _to, _ccto, _sub, _bdy, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string _frm, string _to, string _ccto, string _sub, string _bdy, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        _frm,
                        _to,
                        _ccto,
                        _sub,
                        _bdy}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/SendExpiryMailOnAnyDayFromUserID", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendExpiryMailOnAnyDayFromUserID(string UserAccount) {
            object[] results = this.Invoke("SendExpiryMailOnAnyDayFromUserID", new object[] {
                        UserAccount});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendExpiryMailOnAnyDayFromUserIDAsync(string UserAccount) {
            this.SendExpiryMailOnAnyDayFromUserIDAsync(UserAccount, null);
        }
        
        /// <remarks/>
        public void SendExpiryMailOnAnyDayFromUserIDAsync(string UserAccount, object userState) {
            if ((this.SendExpiryMailOnAnyDayFromUserIDOperationCompleted == null)) {
                this.SendExpiryMailOnAnyDayFromUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendExpiryMailOnAnyDayFromUserIDOperationCompleted);
            }
            this.InvokeAsync("SendExpiryMailOnAnyDayFromUserID", new object[] {
                        UserAccount}, this.SendExpiryMailOnAnyDayFromUserIDOperationCompleted, userState);
        }
        
        private void OnSendExpiryMailOnAnyDayFromUserIDOperationCompleted(object arg) {
            if ((this.SendExpiryMailOnAnyDayFromUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendExpiryMailOnAnyDayFromUserIDCompleted(this, new SendExpiryMailOnAnyDayFromUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/getAuthentication", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getAuthentication(string uid, string pwd) {
            object[] results = this.Invoke("getAuthentication", new object[] {
                        uid,
                        pwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getAuthenticationAsync(string uid, string pwd) {
            this.getAuthenticationAsync(uid, pwd, null);
        }
        
        /// <remarks/>
        public void getAuthenticationAsync(string uid, string pwd, object userState) {
            if ((this.getAuthenticationOperationCompleted == null)) {
                this.getAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAuthenticationOperationCompleted);
            }
            this.InvokeAsync("getAuthentication", new object[] {
                        uid,
                        pwd}, this.getAuthenticationOperationCompleted, userState);
        }
        
        private void OngetAuthenticationOperationCompleted(object arg) {
            if ((this.getAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAuthenticationCompleted(this, new getAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lthed.com/changePassword", RequestNamespace="http://lthed.com", ResponseNamespace="http://lthed.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string changePassword(string uid, string pwd, string npwd) {
            object[] results = this.Invoke("changePassword", new object[] {
                        uid,
                        pwd,
                        npwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changePasswordAsync(string uid, string pwd, string npwd) {
            this.changePasswordAsync(uid, pwd, npwd, null);
        }
        
        /// <remarks/>
        public void changePasswordAsync(string uid, string pwd, string npwd, object userState) {
            if ((this.changePasswordOperationCompleted == null)) {
                this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
            }
            this.InvokeAsync("changePassword", new object[] {
                        uid,
                        pwd,
                        npwd}, this.changePasswordOperationCompleted, userState);
        }
        
        private void OnchangePasswordOperationCompleted(object arg) {
            if ((this.changePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordCompleted(this, new changePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFullNamefromUserIDCompletedEventHandler(object sender, GetFullNamefromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullNamefromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullNamefromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFirstNamefromUserIDCompletedEventHandler(object sender, GetFirstNamefromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFirstNamefromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFirstNamefromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLastNamefromUserIDCompletedEventHandler(object sender, GetLastNamefromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastNamefromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastNamefromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDisplayNamefromUserIDCompletedEventHandler(object sender, GetDisplayNamefromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDisplayNamefromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDisplayNamefromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEmailIDfromUserIDCompletedEventHandler(object sender, GetEmailIDfromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailIDfromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailIDfromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetManagerNamefromUserIDCompletedEventHandler(object sender, GetManagerNamefromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManagerNamefromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManagerNamefromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetManagerEmailfromUserIDCompletedEventHandler(object sender, GetManagerEmailfromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManagerEmailfromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManagerEmailfromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetManagerIDfromUserIDCompletedEventHandler(object sender, GetManagerIDfromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManagerIDfromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManagerIDfromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPSNofromUserIDCompletedEventHandler(object sender, GetPSNofromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPSNofromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPSNofromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPSNoFromEmailCompletedEventHandler(object sender, GetPSNoFromEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPSNoFromEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPSNoFromEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetManagerNameFromEmailCompletedEventHandler(object sender, GetManagerNameFromEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManagerNameFromEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManagerNameFromEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFullNameFromEmailCompletedEventHandler(object sender, GetFullNameFromEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullNameFromEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullNameFromEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPSNoFromnameCompletedEventHandler(object sender, GetPSNoFromnameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPSNoFromnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPSNoFromnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEmailFromNameCompletedEventHandler(object sender, GetEmailFromNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailFromNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailFromNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrincipalNameFromUserIDCompletedEventHandler(object sender, GetPrincipalNameFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrincipalNameFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrincipalNameFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepartmentFromUserIDCompletedEventHandler(object sender, GetDepartmentFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepartmentNameFromUserIDCompletedEventHandler(object sender, GetDepartmentNameFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentNameFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentNameFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepartmentFromNameCompletedEventHandler(object sender, GetDepartmentFromNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentFromNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentFromNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepartmentFromEmailCompletedEventHandler(object sender, GetDepartmentFromEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentFromEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentFromEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMobileNoFromUserIDCompletedEventHandler(object sender, GetMobileNoFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMobileNoFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMobileNoFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDesignationFromUserIDCompletedEventHandler(object sender, GetDesignationFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDesignationFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDesignationFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPasswordExpiryDateFromUserIDCompletedEventHandler(object sender, GetPasswordExpiryDateFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordExpiryDateFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordExpiryDateFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBaanSBUFromUserIDCompletedEventHandler(object sender, GetBaanSBUFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBaanSBUFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBaanSBUFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendExpiryMailFromUserIDCompletedEventHandler(object sender, SendExpiryMailFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendExpiryMailFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendExpiryMailFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetExprDaysOfDomainIDFromUserIDCompletedEventHandler(object sender, GetExprDaysOfDomainIDFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExprDaysOfDomainIDFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExprDaysOfDomainIDFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendExpiryMailOnAnyDayFromUserIDCompletedEventHandler(object sender, SendExpiryMailOnAnyDayFromUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendExpiryMailOnAnyDayFromUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendExpiryMailOnAnyDayFromUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAuthenticationCompletedEventHandler(object sender, getAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void changePasswordCompletedEventHandler(object sender, changePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591